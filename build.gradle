plugins {
   id 'application'
   id 'java'
   id "org.xbib.gradle.plugin.git" version "2.0.0"
}

application {
   mainClass = 'edu.odu.cs.Highway'
}
java {
 sourceCompatibility = JavaVersion.toVersion(11)
 targetCompatibility = JavaVersion.toVersion(11)
}
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
   
}
javadoc{
failOnError false}



task setup(dependsOn ['test', 'javadoc']){

doLast{

if(file('gh-pages').exists() == false){

mkdir 'build/gh-pages'
project.delete{delete "$buildDir/gh-pages}
}

}

def git = git.clone{dir = "$buildDir/gh-pages"
uri = "git@github.com:arapc001/GitLab2.git"
bare = false
refToCheckOut = 'gh-pages'}
git.checkout{branch = 'gh-pages'}
git.close()
}



task reports(dependsOn 'setup'){
doLast{
if(file('build/docs').exists()){
ant.copy (todir:'build/gh-pages/docs')
fileset(dir: 'gh-pages/docs'))
}

if(file('build/reports').exists()){
ant.copy (todir:'build/reports'))
fileset(dir: 'gh-pages/reports'))
}
}
}


task deployReports(dependsOn: 'reports'){

doLast{
def git = git.open{dir = "$buildDir/gh-pages" + "/.git"}
git.add(update: false, patterns: ['reports/']
git.add(update: true, patterns: ['reports/']

git.add(update: false, patterns: ['docs/']
git.add(update: true, patterns: ['docs/']
git.commit{message = "deploy reports"}
git.close()

}
}

tasks.named('test') {
    ignoreFailures = true
    useJUnitPlatform()
}