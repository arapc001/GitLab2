plugins {
   id 'application'
   id 'java'
   id "org.xbib.gradle.plugin.git" version "2.0.0"
}

application {
   mainClass = 'edu.odu.cs.Highway'
}
java {
 sourceCompatibility = JavaVersion.toVersion(11)
 targetCompatibility = JavaVersion.toVersion(11)
}
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
   
}

task setup(){



doLast{

exec{
commandLine = ['mkdir', 'build/gh-pages']
}
exec{
commandLine = ['mkdir', 'build/gh-pages/docs']
}
exec{
commandLine = ['mkdir', 'build/gh-pages/reports']
}

}

}

task reports(type: Copy ){

if(file('build/docs').exists(){
from(file('build/docs'))
into(file('build/gh-pages/docs'))
doLast{
exec{
commandLine = ['git', 'add', 'build/gh-pages/docs']
}
exec{
commandLine = ['git', 'push']
}
}
}
if(file('build/docs').exists(){
from(file('build/reports'))
into(file('build/gh-pages/reports'))
doLast{
exec{
commandLine = ['git', 'add', 'build/gh-pages/reports']
}
exec{
commandLine = ['git', 'push']
}
}

}
}

task deployReports(dependsOn: 'reports'){
doLast{
exec{
commandLine = ['git', 'checkout', 'gh-pages' ]
}
exec{
commandLine = ['git', 'pull', 'git@github.com:arapc001/GitLab2.git', 'gh-pages' ]
}
exec{
commandLine = ['git', 'add', 'gh-pages']
}
exec{
commandLine = ['git', 'commit', '-m', 'deploy reports']
}

exec{
commandLine = ['git', 'switch', 'main' ]
}
}
}

tasks.named('test') {
    ignoreFailures = true
    useJUnitPlatform()
}